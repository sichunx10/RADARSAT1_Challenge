{"ast":null,"code":"var _jsxFileName = \"/Users/qisong/Documents/RADARSAT1_Challenge/src/api/Map.js\";\nimport React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { withGoogleMap, GoogleMap, Marker, InfoWindow } from \"google-map-react\";\nimport Geolocation from \"react-geolocation\";\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, text);\n\nexport default class Map extends Component {\n  //   static defaultProps = {\n  //     center: { lat: 40.744679, lng: -73.948542 },\n  //     zoom: 11\n  //   };\n  constructor(props) {\n    super(props);\n\n    this.geoSuccess = position => {\n      let coords = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      this.setState({\n        center: coords\n      });\n    };\n\n    this.state = props;\n  }\n\n  render() {\n    console.log(this.state.center);\n    console.log(this.state.zoom);\n    return React.createElement(Geolocation, {\n      onSuccess: this.geoSuccess,\n      render: ({\n        fetchingPosition,\n        position: {\n          coords: {\n            latitude,\n            longitude\n          } = {}\n        } = {},\n        error,\n        getCurrentPosition\n      }) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: getCurrentPosition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Get Position\"), error && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, error.message), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"latitude: \", latitude, \"longitude: \", longitude), React.createElement(\"div\", {\n        className: \"google-map\",\n        style: {\n          height: \"80vh\",\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: 'AIzaSyDZ6LLCf_H_2jGMjh3oxB75j-lhUUel52A'\n        },\n        center: this.state.center,\n        zoom: this.state.zoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(AnyReactComponent, {\n        lat: latitude,\n        lng: longitude,\n        text: \"Wheres Waldo?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/qisong/Documents/RADARSAT1_Challenge/src/api/Map.js"],"names":["React","Component","GoogleMapReact","withGoogleMap","GoogleMap","Marker","InfoWindow","Geolocation","AnyReactComponent","text","Map","constructor","props","geoSuccess","position","coords","lat","latitude","lng","longitude","setState","center","state","render","console","log","zoom","fetchingPosition","error","getCurrentPosition","message","height","width","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,MAAnC,EAA0CC,UAA1C,QAA4D,kBAA5D;AACA,OAAOC,WAAP,MAAwB,mBAAxB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,IAAN,CAAxC;;AAEA,eAAe,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAC3C;AACA;AACA;AACA;AAEEU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBC,UANmB,GAMNC,QAAQ,IAAI;AAEvB,UAAIC,MAAM,GAAG;AACXC,QAAAA,GAAG,EAAEF,QAAQ,CAACC,MAAT,CAAgBE,QADV;AAEXC,QAAAA,GAAG,EAAEJ,QAAQ,CAACC,MAAT,CAAgBI;AAFV,OAAb;AAKA,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAEN;AADI,OAAd;AAGD,KAhBkB;;AAGjB,SAAKO,KAAL,GAAaV,KAAb;AACD;;AAcDW,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWD,MAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,IAAvB;AAEA,WACE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAE,KAAKb,UADlB;AAEE,MAAA,MAAM,EAAE,CAAC;AACPc,QAAAA,gBADO;AAEPb,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAEE,YAAAA,QAAF;AAAYE,YAAAA;AAAZ,cAA0B;AAApC,YAA2C,EAF9C;AAGPS,QAAAA,KAHO;AAIPC,QAAAA;AAJO,OAAD,KAMN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAEA,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEGD,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,KAAK,CAACE,OAAZ,CAFZ,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACab,QADb,iBAEcE,SAFd,CAHF,EAOE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,KAAK,EAAE;AAAEY,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,cAAD;AACI,QAAA,gBAAgB,EAAE;AAChBC,UAAAA,GAAG,EAAE;AADW,SADtB;AAGE,QAAA,MAAM,EAAE,KAAKX,KAAL,CAAWD,MAHrB;AAIE,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWI,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,iBAAD;AACE,QAAA,GAAG,EAAET,QADP;AAEE,QAAA,GAAG,EAAEE,SAFP;AAGE,QAAA,IAAI,EAAE,eAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAJF,CAPF,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAqCD;;AAjEwC","sourcesContent":["import React, { Component } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport { withGoogleMap, GoogleMap, Marker,InfoWindow } from \"google-map-react\";\nimport Geolocation from \"react-geolocation\";\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nexport default class Map extends Component {\n//   static defaultProps = {\n//     center: { lat: 40.744679, lng: -73.948542 },\n//     zoom: 11\n//   };\n\n  constructor(props) {\n    super(props);\n\n    this.state = props;\n  }\n\n  geoSuccess = position => {\n    \n    let coords = {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude\n    }\n    \n    this.setState({\n      center: coords\n    })\n  };\n\n  render() {\n    console.log(this.state.center);\n    console.log(this.state.zoom);\n\n    return (\n      <Geolocation\n        onSuccess={this.geoSuccess}\n        render={({\n          fetchingPosition,\n          position: { coords: { latitude, longitude } = {} } = {},\n          error,\n          getCurrentPosition\n        }) => (\n          <div>\n            <button onClick={getCurrentPosition}>Get Position</button>\n            {error && <div>{error.message}</div>}\n            <pre>\n              latitude: {latitude}\n              longitude: {longitude}\n            </pre>\n            <div\n              className=\"google-map\"\n              style={{ height: \"80vh\", width: \"100%\" }}\n            >\n              <GoogleMapReact\n                  bootstrapURLKeys={{\n                    key: 'AIzaSyDZ6LLCf_H_2jGMjh3oxB75j-lhUUel52A' }}\n                center={this.state.center}\n                zoom={this.state.zoom}\n              >\n                <AnyReactComponent\n                  lat={latitude}\n                  lng={longitude}\n                  text={\"Wheres Waldo?\"}\n                />\n              </GoogleMapReact>\n            </div>\n          </div>\n        )}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}