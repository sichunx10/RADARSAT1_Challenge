{"ast":null,"code":"var _jsxFileName = \"/Users/qisong/Documents/RADARSAT1_Challenge/src/components/IndexPage/index.js\";\nimport React, { Component } from 'react';\nimport { Button, Image, Card, Row, Col } from 'react-bootstrap';\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport CurrentLocation from '../../api/Map';\nimport './index.css';\n\nclass Index extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latitude: '',\n      longitude: '',\n      showingInfoWindow: false,\n      origin: null,\n      destination: null,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"latitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"latitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"latitude\"), React.createElement(\"input\", {\n      placeholder: \"latitude\",\n      type: \"float\",\n      name: \"latitude\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"longitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"longitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"longitude\"), React.createElement(\"input\", {\n      placeholder: \"longitude\",\n      type: \"float\",\n      name: \"longitude\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Submit\"))))), React.createElement(CurrentLocation, {\n      centerAroundCurrentLocation: true,\n      google: this.props.google,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'current location',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.selectedPlace.name)))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDTvim5iSgu4FyajIK4ZOXS7CgSqapq85g'\n})(Index);","map":{"version":3,"sources":["/Users/qisong/Documents/RADARSAT1_Challenge/src/components/IndexPage/index.js"],"names":["React","Component","Button","Image","Card","Row","Col","GoogleApiWrapper","InfoWindow","Marker","CurrentLocation","Index","state","latitude","longitude","showingInfoWindow","origin","destination","activeMarker","selectedPlace","handleChange","e","preventDefault","target","name","value","setState","console","log","handleSubmit","onMarkerClick","props","marker","onClose","render","google","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Image, Card, Row, Col } from 'react-bootstrap';\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport CurrentLocation from '../../api/Map';\nimport './index.css';\n\nclass Index extends Component {\n    state = {\n        latitude:'',\n        longitude:'',\n        showingInfoWindow: false,\n        origin: null,\n        destination: null,\n        activeMarker: {},\n        selectedPlace: {}\n    }\n\n    handleChange = e => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        this.setState({ [name]: value }, () => console.log(this.state));\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n    }\n    onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n        this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n        });\n        }\n    };\n\n    render(){\n        return (\n            <>\n                <form onSubmit={this.handleSubmit}>\n                    <Row>\n                        <Col>\n                            <div className=\"latitude\">\n                                <label htmlFor=\"latitude\">latitude</label>\n                                <input\n                                    placeholder=\"latitude\"\n                                    type=\"float\"\n                                    name=\"latitude\"\n                                    onChange={this.handleChange}\n                                />\n                            </div>\n                            <div className=\"longitude\">\n                                <label htmlFor=\"longitude\">longitude</label>\n                                <input\n                                    placeholder=\"longitude\"\n                                    type=\"float\"\n                                    name=\"longitude\"\n                                    onChange={this.handleChange}\n                                />\n                            </div>\n                        </Col>\n                        <Col>\n                            <div>\n                                <button type=\"submit\">Submit</button>\n                            </div>\n                        </Col>\n                    </Row>\n                    \n                   \n                </form>\n                <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n                    <Marker onClick={this.onMarkerClick} name={'current location'} />\n                    <InfoWindow\n                    marker={this.state.activeMarker}\n                    visible={this.state.showingInfoWindow}\n                    onClose={this.onClose}\n                    >\n                    <div>\n                        <h4>{this.state.selectedPlace.name}</h4>\n                    </div>\n                    </InfoWindow>\n                </CurrentLocation>\n            </>\n        )\n    }\n    \n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDTvim5iSgu4FyajIK4ZOXS7CgSqapq85g'\n  })(Index);"]},"metadata":{},"sourceType":"module"}