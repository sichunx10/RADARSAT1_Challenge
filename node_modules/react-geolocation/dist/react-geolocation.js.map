{"version":3,"sources":["../src/index.js"],"names":["Geolocation","props","_React$Component","call","this","getCurrentPosition","_this","enableHighAccuracy","_this$props","timeout","maximumAge","onSuccess","onError","setState","fetchingPosition","window","navigator","geolocation","position","willUnmount","error","state","undefined","componentWillMount","_typeof","lazy","componentWillUnmount","render","React","Component","propTypes","PropTypes","bool","number","func","defaultProps","Infinity","pos","err"],"mappings":"07BAGqBA,EAAAA,SAAAA,cACNC,0BACXC,EAAAC,KAAAC,KAAMH,aA6BRI,mBAAqB,iBAOfC,EAAKL,MALPM,EAFuBC,EAEvBD,mBACAE,EAHuBD,EAGvBC,QACAC,EAJuBF,EAIvBE,WACAC,EALuBH,EAKvBG,UACAC,EANuBJ,EAMvBI,iBAGGC,UAAWC,kBAAkB,IAE3BC,OAAOC,UAAUC,YAAYZ,mBAClC,SAAAa,GACMZ,EAAKa,eAEJN,UAAWK,SAAAA,EAAUJ,kBAAkB,GAAS,iBACnDH,GAAUO,MAGd,SAAAE,GACMd,EAAKa,eAEJN,UAAWO,MAAAA,EAAON,kBAAkB,GAAS,iBAAMF,GAAQQ,OAEhEb,mBAAAA,EAAoBE,QAAAA,EAASC,WAAAA,OAnD5BW,yBACe,eACRC,aACHA,gCAIXC,mBAAAA,WACwB,YAAlB,mBAAOR,QAAP,YAAAS,EAAOT,UAIL,eAAiBA,QAAOC,YAI1BZ,KAAKH,MAAMwB,WAIVpB,mCAGPqB,qBAAAA,gBACOP,aAAc,eA+BrBQ,OAAAA,iBACOvB,MAAKH,MAAM0B,OAIdvB,KAAKH,MAAM0B,2BACWvB,KAAKC,oCACPD,KAAKiB,MAAMP,0BACnBV,KAAKiB,MAAMH,eACdd,KAAKiB,MAAMD,SACd,KARC,SA7D4BQ,EAAMC,UA0E/C7B,GAAY8B,8BAEUC,EAAUC,aACrBD,EAAUE,kBACPF,EAAUE,iBAEXF,EAAUG,aACZH,EAAUG,UAEbH,EAAUC,MAGlBhC,EAAYmC,kCACU,UACXC,EAAAA,aACG,YACD,SAAAC,aAEF,SAAAC,WACH","file":"react-geolocation.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class Geolocation extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      fetchingPosition: false,\n      position: undefined,\n      error: undefined\n    }\n  }\n\n  componentWillMount () {\n    if (typeof window !== 'object') {\n      return\n    }\n\n    if (!('geolocation' in window.navigator)) {\n      return\n    }\n\n    if (this.props.lazy) {\n      return\n    }\n\n    this.getCurrentPosition()\n  }\n\n  componentWillUnmount () {\n    this.willUnmount = true\n  }\n\n  getCurrentPosition = () => {\n    const {\n      enableHighAccuracy,\n      timeout,\n      maximumAge,\n      onSuccess,\n      onError\n    } = this.props\n\n    this.setState({ fetchingPosition: true })\n\n    return window.navigator.geolocation.getCurrentPosition(\n      position => {\n        if (this.willUnmount) return\n\n        this.setState({ position, fetchingPosition: false }, () =>\n          onSuccess(position)\n        )\n      },\n      error => {\n        if (this.willUnmount) return\n\n        this.setState({ error, fetchingPosition: false }, () => onError(error))\n      },\n      { enableHighAccuracy, timeout, maximumAge }\n    )\n  }\n\n  render () {\n    if (!this.props.render) {\n      return null\n    }\n    return (\n      this.props.render({\n        getCurrentPosition: this.getCurrentPosition,\n        fetchingPosition: this.state.fetchingPosition,\n        position: this.state.position,\n        error: this.state.error\n      }) || null\n    )\n  }\n}\n\nGeolocation.propTypes = {\n  // https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions\n  enableHighAccuracy: PropTypes.bool,\n  timeout: PropTypes.number,\n  maximumAge: PropTypes.number,\n  // https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/getCurrentPosition\n  onSuccess: PropTypes.func,\n  onError: PropTypes.func,\n  // Do not call getCurrentPosition on mount\n  lazy: PropTypes.bool\n}\n\nGeolocation.defaultProps = {\n  enableHighAccuracy: false,\n  timeout: Infinity,\n  maximumAge: 0,\n  onSuccess: pos => {},\n  // eslint-disable-next-line handle-callback-err\n  onError: err => {},\n  lazy: false\n}\n"]}